// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module netconnector;

import "application/services/application_launcher.fidl";
import "application/services/service_provider.fidl";

// Netconnector admin service definition.
[ServiceName="netconnector::NetConnectorAdmin"]
interface NetConnectorAdmin {
  // Sets the name for the local device. This method is typically only called
  // by the |netconnector| app when it's used as an admin utility.
  SetHostName(string host_name);

  // Registers a responding service. |service_name| identifies the service and
  // is the same name used in |ConnectToService|. |launch_info| provides the
  // information required to launch the service. This method is typically only
  // called by the |netconnector| app when it's used as an admin utility. In
  // most cases, responding service will be registered using |netconnector|'s
  // config file.
  RegisterService(string service_name,
                  modular.ApplicationLaunchInfo launch_info);

  // Registers a device. |device_name| identifies the device and is the same
  // name used in |RequestConnection|. |address| is the IP address of the
  // device. This method is typically only called by the |netconnector| app
  // when it's used as an admin utility. In most cases, devices will be
  // discovered using mDNS or will be registered using |netconnector|'s config
  // file.
  RegisterDevice(string device_name, string address);

  // Registers a running responding service. |service_name| identifies the
  // service and is the same name used in |ConnectToService|. |service_provider|
  // provides the service. This method is provided so that responding services
  // running in a user context can register with a |netconnector| running in a
  // device context.
  RegisterServiceProvider(string service_name,
                          modular.ServiceProvider service_provider);
};
